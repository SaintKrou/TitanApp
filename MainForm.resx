<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YZ/7XzZ2F/CYOjkR1Qnd1218FcLGlcAjbtYA7Y3+G9hYj+MwjjgpfAhHzQexEIBwQnowkXT3Oo6e8FzS
        VWftfxw9mviR6FvoCS2svHbuBTyhUbeZsOdR/WviNS9D/ix7Ta/Jl0eBX+OgjZGsbHScL7a/iJuT2zNX
        gT75XjicVL0r9l/Ivii3IMn+n8bW8KyNsSztdJ0fzZ7UTlmY0Ay8jnvCpxOqFa3/kewgOpFQ/3JG7g4t
        XQGxdjt4+gls1zeTaF9Hsb34lyQqlaP0J/wgofsiI7oN1t7+rO11/3esez41jHWoi7n9YXThlz+Zd/sV
        PYXs8xjWdsnEXOgN7ZJfmX/8u8Tinx08pdl+fQlt8oG4elfIAO7F3nDePf0AkC+19+MlrJGmGIv8W+/F
        b232b33vv+BG7MTtWGC/d53G49gZGl/8jFfQip36eYmhf7ytj2Nn+JzdQa3/3Ul+KHsAr+FaNFsNVwn/
        wgPYFQ7aPl77/bcfkFO4Vpuj7dQXtX99Dg9gV2j9vkssu3/eIzXL8RVs1tVi4YxAJ9Eve3UfTofJftie
        s+1SWI6vYrOsho0zgkntx2/wu+kzP4uh/9i2f/2pnGrAWtyKm3CdNCGjVeWUUqAo53VUXsYx9OrxybGe
        CnnyL7lP0o2yBuv1JlmJJmTKXWu1iPMYwcvyDxzSPozFFf6Y9//dKqlaNMsyLNZ6RI6AAgVMyIgOyXDV
        1I8q7KmfKRCtlWYsw2Ktl3IiUMCEjsjrelanHqzg/omIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
        iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIj+X/wX2ognRuRO+r4AAAAA
        SUVORK5CYII=
</value>
  </data>
</root>